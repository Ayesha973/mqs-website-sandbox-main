.main {
    min-height: 100vh;             
    background-color: #111111c6;     
    color: #e0e0e0;                
}
.container {
    max-width: 75%;
    margin: 0 auto;
    padding: 0 20px; 
}
.hero {
    position: relative;
    width: 100%;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(to bottom,
        rgba(0, 0, 0, 0),
        rgba(0, 0, 0, 0),
        rgba(0, 0, 0, 0.3),
        rgb(0, 0, 0, 0.8)
      ),
      url("/MQF photos/groot.jpg") no-repeat center center;
    background-size: cover;
}
.overlay {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background: rgba(0, 0, 0, 0.7);
    z-index: 1;
}
.heroText {
    position: relative;
    z-index: 2;
    color: rgb(239, 239, 239);
    animation: fadeInUp 1.2s ease-out both;
    padding: 0 1rem;
}
.hero:hover {
    transform: scale(1.1); 
    transition: transform 0.7s ease-in-out;  
}
.heroText h1 {
    font-size: clamp(5rem, 6vw, 9rem);}
@keyframes fadeInUp {
    0% {
        opacity: 0;
        transform: translateY(40px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}
.grid {
    display: grid;
    width: 100%;
    grid-template-columns: repeat(2, minmax(900px, 900px));
    gap: 15px;
    /*padding: 10px;*/
    justify-content: center;
}
@media (max-width: 1900px) {
    .grid {
      grid-template-columns: 1fr;
    }
  }
.card {
    position: relative;
    width: 100%;
    aspect-ratio: 1 / 1;
    background-color: #0b0a0a;
    overflow: hidden;
    border-radius: 0.5px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.4);
    display: flex;
    transform: perspective(2000px);
}
.card .image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    /*display: block;*/
    object-fit: cover;
}
.card .image img {
    width: 100%;
    height: 100%;
    object-fit: cover; 
    transition: transform 1s, opacity 0.5s;
}
.card:hover .image img {
    opacity: 0.9;
    transform: translateX(5%);
}
.card .details {
    position: absolute;
    top: 0;
    left: 0;
    width: 60%;
    height: 100%;
    background: #000000;
    transform-origin: left;
    transform: perspective(5000px) rotateY(-180deg);
    transition: transform 0.2s ease-in-out;
    opacity: 0.85;
    z-index: 1;
    align-content: center;
    padding: 0% 5% 0% 5%;
}
.card:hover .details {
    transform: perspective(2000px) rotateY(0deg);
}
.card .details .center {
    background: #000000;
    width: 100%;
    opacity: 0.9;
    font-size: clamp(1rem, 1vw, 2rem);
}
/*.card .details .center ul {
    display: table;
    margin-top: 0;
    padding: 0;
    list-style: none;
}
.card .details .center ul li {
    display: inline-block;
    margin-top: 10px;
}
.card .details .center ul li a {
    display: block;
    background: #262626;
    color: #fff;
    width: 30px;
    height: 30px;
    line-height: 30px;
    margin-top: 10px;
    transition: background 0.2s ease;
}
.card .details .center ul li a:hover {
    background: #614c4c;
}*/
.upcomingSection {
    padding: 15% 2% 200px 2%;
    background-color: 000000c6;
    color: #fff;
    text-align: center;
    html {font-size: 10px;}
}
.upcomingSection h1 {
    font-size: 100%;
    color: #e14d6be8;
}
.upcomingSection h2 {
    font-size: 30%;
    font-weight: 300;
    padding: 5% 5%;
}
.upcomingSection h3 {
    font-size: 65%;
}
.upcomingSection p {
    font-size: 1.5rem;
    line-height: 2;
    margin: 30px;
}
.upcomingGrid {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-content: center;
    gap: 100px;
    padding: 5% 10% 10% 10%;
}
.upcomingItem {
    position: relative;
    width: 500px;
    height: 500px;
    background: #111111c6;
    align-content: center;
    box-sizing: border-box;
    border: 1px solid #e14d6be8;
}
/* Stacked layer behind */
.upcomingItem::before {
    position: absolute;
    content: '';
    top: 0; left: 0;
    width: 100%; height: 100%;
    border: 1px solid #e14d6be8;
    box-sizing: border-box;
    transform: translate(10px, 10px);
    transition: transform 0.5s ease-in-out, border 0.5s ease-out;
}
.upcomingItem:hover::before {
    transform: translate(0, 0);
    border: hidden;
} 
.upcomingItem:hover {
    box-shadow: 6px 6px 20px -8px rgba(191, 225, 207, 0.2);
    border: hidden;
    transform: translate(10px, 10px) scale(1.1,1.1);
    transition: transform 0.4s ease-in-out;
}
.upcomingItem:hover .upcomingContent {
    transform: translate(0, 0);
  }
  